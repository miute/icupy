[tox]
envlist =
    build-{linux,win}-py{310, 39, 38, 37}
skip_missing_interpreters = true

[gh-actions]
python =
    3.10: py310
    3.9: py39
    3.8: py38
    3.7: py37

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    ubuntu-20.04: linux
    windows-latest: win
    windows-2019: win

[testenv]
deps =
    coverage[toml]
    pytest

[testenv:build-linux-py{310, 39, 38, 37}]
description = run the tests after installing extension locally [linux-{basepython}]
passenv =
    *
setenv =
    CMAKE_GENERATOR = {env:CMAKE_GENERATOR:Ninja}
    CXX = g++
    CXXFLAGS = -O0 -g --coverage
    LDFLAGS = --coverage
skip_install = true
deps =
    {[testenv]deps}
changedir = {toxinidir}/{envname}
commands =
    cmake ../src
    cmake --build . --target install
    /bin/cp {toxinidir}/pyproject.toml .
    coverage run -p -m pytest {posargs:{tty::--color=yes} ../tests}
    bash -c "/bin/mv .coverage* {toxinidir}"
    lcov -q -c -d {[testenv:{envname}]cov_app_dir} -o {[testenv:{envname}]cov_out_file}
    lcov -q -r {[testenv:{envname}]cov_out_file} '/usr/*' '*/python*' '*/src/third_party/*' -o {[testenv:{envname}]cov_out_file}
    /bin/rm -rf {[testenv:cov-cpp]htmlcov_dir}
    genhtml -q -f --demangle-cpp -o {[testenv:cov-cpp]htmlcov_dir} {[testenv:{envname}]cov_out_file}
    lcov -l {[testenv:{envname}]cov_out_file}
allowlist_externals =
    bash
    cmake
    cp
    genhtml
    lcov
    rm
cov_app_dir = {toxinidir}/{envname}/CMakeFiles/icu.dir
cov_out_file = {toxinidir}/coverage-{envname}.{env:PYTHONHASHSEED}.info
platform = linux

[testenv:build-win-py{310, 39, 38, 37}]
description = run the tests after installing extension locally [windows-{basepython}]
passenv =
    *
setenv =
    CMAKE_GENERATOR = {env:CMAKE_GENERATOR:Visual Studio 16 2019}
    CMAKE_GENERATOR_PLATFORM = {env:CMAKE_GENERATOR_PLATFORM:x64}
    ICU_ROOT = {env:ICU_ROOT:C:/icu}
skip_install = true
deps =
    {[testenv]deps}
changedir = {toxinidir}/{envname}
commands =
    cmake -Wno-dev ../src
    cmake --build . --config Release --target install
    pwsh -c "copy {toxinidir}/pyproject.toml ."
    coverage run -p -m pytest {posargs:{tty::--color=yes} ../tests}
    pwsh -c "move .coverage.* {toxinidir}"
allowlist_externals =
    cmake
    pwsh
platform = win

[testenv:cov]
description = report coverage of Python API
skip_install = true
deps =
    coverage[toml]
commands =
    - coverage combine
    coverage xml
    coverage report -m

[testenv:cov-cpp]
description = report coverage of C/C++ API
skip_install = true
deps =
commands =
    - bash -c "find {toxinidir} -maxdepth 1 -name coverage-build-\*.info -exec echo -a \{\} \; | xargs lcov -o {[testenv:{envname}]cov_out_file}"
    - bash -c "/bin/rm {toxinidir}/coverage-build-*.info"
    /bin/rm -rf {[testenv:{envname}]htmlcov_dir}
    genhtml -q -f --demangle-cpp -o {[testenv:{envname}]htmlcov_dir} {[testenv:{envname}]cov_out_file}
    lcov -l {[testenv:{envname}]cov_out_file}
allowlist_externals =
    bash
    genhtml
    lcov
    rm
cov_out_file = {toxinidir}/coverage-cpp.info
htmlcov_dir = {toxinidir}/htmlcov-cpp
platform = linux
