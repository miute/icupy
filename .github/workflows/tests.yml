name: tests

on:
  push:
    branches:
      - 'main'
    tags-ignore:
      - '**'
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-latest]
        icu-version: ["70.1", "71.1", "72.1", "73.2", "74.2"]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Set up Python ${{matrix.python-version}}
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools

      - name: Install dependencies
        run: |
          python -m pip install --user tox
          python -m pip install --user --pre tox-gh-actions

      - run: mkdir -p build

      - name: Parse icu-versions.json
        id: icu
        shell: bash
        run: |
          latest=`cat ./icu-versions.json | jq -r .latest`
          echo "latest=$latest"
          content=`cat ./icu-versions.json | jq -c ".versions[] | select(.version == \"${{matrix.icu-version}}\")"`
          echo "icu4c=$content"
          echo "icu4c_latest_version=$latest" >> $GITHUB_ENV
          echo "icu4c_target_json=$content" >> $GITHUB_ENV

      - name: Set up requirements (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        working-directory: build
        run: |
          sudo apt-get install -y lcov
          curl -LO ${{fromJson(env.icu4c_target_json).url}}/${{fromJson(env.icu4c_target_json).icu4c_ubuntu_x64_tgz}}
          sudo tar zxf ${{fromJson(env.icu4c_target_json).icu4c_ubuntu_x64_tgz}} -C / --strip-components=2
          echo "PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "CMAKE_GENERATOR=Unix Makefiles" >> $GITHUB_ENV

      - name: Set up requirements (Windows)
        if: startsWith(matrix.os, 'windows')
        working-directory: build
        env:
          INSTALL_PREFIX: "${{github.workspace}}/build"
          ICU4C_DIR: "icu4c"
        run: |
          curl -LO ${{fromJson(env.icu4c_target_json).url}}/${{fromJson(env.icu4c_target_json).icu4c_win64_zip}}
          7z x ${{fromJson(env.icu4c_target_json).icu4c_win64_zip}} -o${{env.ICU4C_DIR}}
          if ("x${{fromJson(env.icu4c_target_json).double_zipped_filename}}" -ne "x") {
            7z x ${{env.ICU4C_DIR}}/${{fromJson(env.icu4c_target_json).double_zipped_filename}} -o${{env.ICU4C_DIR}}
          }
          echo "ICU_ROOT=${{env.INSTALL_PREFIX}}/${{env.ICU4C_DIR}}" >> $env:GITHUB_ENV

      - name: Run tests
        env:
          PLATFORM: ${{matrix.os}}
        run: |
          python -m tox -c tox-coverage.ini

      - name: Store coverage data
        if: matrix.icu-version == env.icu4c_latest_version
        uses: actions/upload-artifact@v3
        with:
          name: coverage-data
          path: |
            coverage*.info
            .coverage*

  report:
    needs: test
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools

      - name: Install dependencies
        run: |
          python -m pip install --user tox

      - name: Set up requirements
        run: |
          sudo apt-get install -y lcov

      - name: Restore coverage data
        uses: actions/download-artifact@v3
        with:
          name: coverage-data

      - name: Report coverage statistics
        run: |
          python -m tox -c tox-coverage.ini -e cov,cov-cpp

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          files: coverage.xml, coverage-cpp.info

      - name: Store coverage reports
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: |
            coverage.xml
            coverage-cpp.info
