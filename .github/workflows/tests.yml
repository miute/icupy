name: tests

on:
  push:
    branches: [main, develop]
  pull_request:
    types: [closed]
  workflow_dispatch:

env:
  ICU_DL_PATH: "https://github.com/unicode-org/icu/releases/download/release-70-1"
  ICU4C_UBUNTU_TGZ: "icu4c-70_1-Ubuntu-20.04-x64.tgz"
  ICU4C_WIN64_ZIP: "icu4c-70_1-Win64-MSVC2019.zip"

jobs:
  download:
    runs-on: ubuntu-20.04

    steps:
    - run: mkdir -p requirements

    - name: Download requirements
      working-directory: requirements
      run: |
        curl -LO ${{env.ICU_DL_PATH}}/${{env.ICU4C_UBUNTU_TGZ}}
        curl -LO ${{env.ICU_DL_PATH}}/${{env.ICU4C_WIN64_ZIP}}

    - name: Store requirements
      uses: actions/upload-artifact@v2
      with:
        name: requirements
        path: requirements

  test:
    needs: download
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-20.04
          python-version: "3.7"
          tox-envname: build-linux-py37
        - os: ubuntu-20.04
          python-version: "3.8"
          tox-envname: build-linux-py38
        - os: ubuntu-20.04
          python-version: "3.9"
          tox-envname: build-linux-py39
        - os: ubuntu-20.04
          python-version: "3.10"
          tox-envname: build-linux-py310
        - os: windows-2019
          python-version: "3.7"
          tox-envname: build-win-py37
        - os: windows-2019
          python-version: "3.8"
          tox-envname: build-win-py38
        - os: windows-2019
          python-version: "3.9"
          tox-envname: build-win-py39
        - os: windows-2019
          python-version: "3.10"
          tox-envname: build-win-py310

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: "recursive"

    - uses: actions/download-artifact@v2
      with:
        name: requirements
        path: build/extra

    - name: Set up requirements (Ubuntu)
      if: startsWith(matrix.os, 'ubuntu')
      working-directory: build
      run: |
        sudo apt-get install -y lcov
        sudo tar zxf extra/${{env.ICU4C_UBUNTU_TGZ}} -C / --strip-components=2
        echo "PKG_CONFIG_PATH=/usr/local/lib/pkgconfig" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=/usr/local/lib" >> $GITHUB_ENV
        echo "CMAKE_GENERATOR=Unix Makefiles" >> $GITHUB_ENV

    - name: Set up requirements (Windows)
      if: startsWith(matrix.os, 'windows')
      working-directory: build
      env:
        INSTALL_PREFIX: "${{github.workspace}}/build"
        ICU4C_DIR: "extra.icu4c"
      run: |
        Expand-Archive extra/${{env.ICU4C_WIN64_ZIP}} -DestinationPath ${{env.ICU4C_DIR}} -Force
        echo "ICU_ROOT=${{env.INSTALL_PREFIX}}/${{env.ICU4C_DIR}}" >> $env:GITHUB_ENV

    - name: Set up Python ${{matrix.python-version}}
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.python-version}}

    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools

    - name: Install dependencies
      run: |
        python -m pip install tox

    - name: Run the tests after installing extension locally
      run: |
        python -m tox -e "${{matrix.tox-envname}}"

    - name: Store coverage data
      uses: actions/upload-artifact@v2
      with:
        name: coverage-data
        path: |
          coverage*.info
          .coverage*

  report:
    needs: test
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Set up requirements
      run: |
        sudo apt-get install -y lcov

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools

    - name: Install dependencies
      run: |
        python -m pip install tox

    - name: Restore coverage data
      uses: actions/download-artifact@v2
      with:
        name: coverage-data

    - name: Report coverage statistics
      run: |
        python -m tox -e cov,cov-cpp

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2

    - name: Store coverage report
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: |
          coverage.xml
          coverage-cpp.info
