name: build wheels (ICU 71RC)

on:
  push:
    tags: [v*]
  workflow_dispatch:

env:
  ICU_DL_PATH: "https://github.com/unicode-org/icu/releases/download/release-71-rc"
  ICU4C_UBUNTU_TGZ: "icu4c-71rc-Ubuntu-20.04-x64.tgz"
  ICU4C_WIN64_ZIP: "icu4c-71rc-Win64-MSVC2019.zip"

jobs:
  download:
    runs-on: ubuntu-20.04

    steps:
    - run: mkdir requirements

    - name: Download requirements
      working-directory: requirements
      run: |
        curl -LO ${{env.ICU_DL_PATH}}/${{env.ICU4C_UBUNTU_TGZ}}
        curl -LO ${{env.ICU_DL_PATH}}/${{env.ICU4C_WIN64_ZIP}}

    - name: Store requirements
      uses: actions/upload-artifact@v2
      with:
        name: requirements
        path: requirements

  build:
    needs: download
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        architecture: ["x64"]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: "recursive"

    - uses: actions/download-artifact@v2
      with:
        name: requirements
        path: build/extra

    - name: Set up requirements (Ubuntu)
      if: startsWith(matrix.os, 'ubuntu')
      working-directory: build
      run: |
        sudo tar zxf extra/${{env.ICU4C_UBUNTU_TGZ}} -C / --strip-components=2
        echo "PKG_CONFIG_PATH=/usr/local/lib/pkgconfig" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=/usr/local/lib" >> $GITHUB_ENV

    - name: Set up requirements (Windows)
      if: startsWith(matrix.os, 'windows')
      working-directory: build
      env:
        INSTALL_PREFIX: "${{github.workspace}}/build"
        ICU4C_DIR: "extra.icu4c"
      run: |
        Expand-Archive extra/${{env.ICU4C_WIN64_ZIP}} -DestinationPath ${{env.ICU4C_DIR}} -Force
        echo "ICU_ROOT=${{env.INSTALL_PREFIX}}/${{env.ICU4C_DIR}}" >> $env:GITHUB_ENV

    - name: Set up Python ${{matrix.python-version}}
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.python-version}}
        cache: "pipenv"

    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools

    - name: Install dependencies
      run: |
        python -m pip install --user pipenv
        pipenv --python ${{matrix.python-version}}
        pipenv install --dev

    - name: Build wheel
      run: |
        pipenv run python -m build --wheel

    - name: Store dist
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/*.whl

    - name: Run tests
      run: |
        pipenv run pip install --no-deps --no-index --find-links=./dist/ icupy
        pipenv run pytest --color=yes
