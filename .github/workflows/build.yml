name: build wheels

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  parse-icu-versions:
    outputs:
      latest-version: ${{steps.parse-icu-versions.outputs.latest-version}}
      json: ${{steps.parse-icu-versions.outputs.json}}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Parse icu-versions.json
        id: parse-icu-versions
        uses: ./.github/actions/parse-icu-versions

  build:
    runs-on: ${{matrix.os}}
    needs: parse-icu-versions
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Set up Python ${{matrix.python-version}}
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python-version}}

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools

      - name: Install dependencies
        run: |
          python -m pip install build pytest

      - run: mkdir -p build

      - name: Set up requirements (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        working-directory: build
        run: |
          curl -LO ${{fromJson(needs.parse-icu-versions.outputs.json).url}}/${{fromJson(needs.parse-icu-versions.outputs.json).icu4c_ubuntu_x64_tgz}}
          sudo tar zxf ${{fromJson(needs.parse-icu-versions.outputs.json).icu4c_ubuntu_x64_tgz}} -C / --strip-components=2
          echo "PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV

      - name: Set up requirements (Windows)
        if: startsWith(matrix.os, 'windows')
        working-directory: build
        env:
          INSTALL_PREFIX: "${{github.workspace}}/build"
          ICU4C_DIR: "icu4c"
        run: |
          curl -LO ${{fromJson(needs.parse-icu-versions.outputs.json).url}}/${{fromJson(needs.parse-icu-versions.outputs.json).icu4c_win64_zip}}
          7z x ${{fromJson(needs.parse-icu-versions.outputs.json).icu4c_win64_zip}} -o${{env.ICU4C_DIR}}
          if ("x${{fromJson(needs.parse-icu-versions.outputs.json).double_zipped_filename}}" -ne "x") {
            7z x ${{env.ICU4C_DIR}}/${{fromJson(needs.parse-icu-versions.outputs.json).double_zipped_filename}} -o${{env.ICU4C_DIR}}
          }
          echo "ICU_ROOT=${{env.INSTALL_PREFIX}}/${{env.ICU4C_DIR}}" >> $env:GITHUB_ENV

      - name: Build sdist
        if: strategy.job-index == 0
        run: python -m build --sdist

      - name: Build wheel
        run: python -m build --wheel

      - name: Store distribution archives
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{matrix.os}}-${{matrix.python-version}}
          path: |
            dist/*.whl
            dist/*.tar.gz

      - name: Run tests
        run: |
          python -m pip install --no-deps --no-index --find-links=./dist/ --force-reinstall icupy
          pytest

  merge:
    runs-on: ubuntu-latest
    needs: [parse-icu-versions, build]
    steps:
      - name: Merge artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: dist-icupy-icu${{needs.parse-icu-versions.outputs.latest-version}}
          pattern: dist-*
          delete-merged: true
